syntax = "proto3";

package raftapi;
option go_package = ".;raftapi";

/*
  Basic Types
 */
message Empty{}

message Bool {bool status = 1;}

message  LogEntry {
  uint64 term = 1;
  int64 value = 2;
}

/*
  Management Messages
 */

message WhoAmI {
  string name = 1;
  uint32 port = 2;
  string role = 3;
}

/*
  Raft Protocol Messages
 */
message RequestVoteMessage {
  uint64 term = 1;
  string candidate = 2;
  uint64 logSize = 3;
  uint32 lastLogTerm = 4;
}

message AppendEntryRequest {
  uint64 term = 1;
  string leader = 2;
  int64 prevLogId = 3;
  uint64 prevLogTerm = 4;
  oneof logEntry {
    LogEntry entry = 5;
  };
}

message AppendEntryResponse {
  uint64 term = 1;
  bool success = 2;
}


service RaftService {
  // Management Requests
  rpc Ping(Empty) returns (WhoAmI) {}
  rpc Shutdown(Empty) returns (Bool) {}

  // Raft Requests
  rpc RequestVote(RequestVoteMessage) returns (RequestVoteMessage) {}
  rpc AppendEntry(AppendEntryRequest) returns (AppendEntryResponse) {}
}
